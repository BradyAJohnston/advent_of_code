---
title: "Advent of Code"
author: "Brady Johnston"
format: html
editor: visual
---

Document for workingo out solutions to the advent of code.

## Day 1
### Part 1

Read in the data:

```{r filename = "Code"}
#| class-output: "r sourceCode"
options(tidyverse.quiet = TRUE)
library(tidyverse)

dat <- read_lines('data/day1.txt') |> 
  as_tibble() |> 
  rename(calories = 1)

head(dat)
```

Each data point is separated by an empty line, we can check when those lines are empty and count upwards, to label each datapoints for each elf.

```{r filename = "Code"}
#| class-output: "r sourceCode"
dat <- dat |> 
  mutate(
    calories = as.numeric(calories), 
    elf = cumsum(is.na(calories)) + 1
  )
dat
```

Now we can remove the empty rows, and nest the data for each elf.

```{r filename = "Code"}
#| class-output: "r sourceCode"
dat <- dat |> 
drop_na(calories) |> 
  group_by(elf) |> 
  nest() 
dat
```


For each nested dataframe, we can sum together the calories and arrange the dataframe based on the descending total of calories
```{r filename = "Code"}
#| class-output: "r sourceCode"
dat <- dat |> 
  mutate(
    total = map_dbl(data, sum)
  ) |> 
  arrange(-total)

dat
```

### Part 2

We need to first ungroup the rows, then rank the totals and get only the top 3 values.

```{r filename = "Code"}
#| class-output: "r sourceCode"
dat |> 
  ungroup() |> 
  filter(
    rev(rank(total)) %in% 1:3
  ) |> 
  summarise(total = sum(total))
```

### Additional Poking Around

Some additional visulisations of the daily data.

```{r}
dat |> 
  ggplot(aes(total)) + 
  geom_histogram(
    fill = "gray50", 
    binwidth = 2000
  ) + 
  labs(
    x = "Calories Carried", 
    y = "Number of Elves"
  ) + 
  theme_bw()
```

